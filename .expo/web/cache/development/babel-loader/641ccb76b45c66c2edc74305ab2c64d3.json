{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = createTabBarItemIOSComponent;var _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _isEqual = _interopRequireDefault(require(\"lodash/isEqual\"));\nvar _pick = _interopRequireDefault(require(\"lodash/pick\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _reactNative = require(\"./react-native\");var _jsxFileName = \"/Users/makenzis/Desktop/renative-template-chat-refactor/renative-template-chat/node_modules/react-native-vector-icons/lib/tab-bar-item-ios.js\";function _createSuper(Derived) {var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (hasNativeReflectConstruct) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === \"function\") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}\n\nvar ICON_PROP_NAMES = ['iconName', 'iconSize', 'iconColor'];\nvar SELECTED_ICON_PROP_NAMES = [].concat(\nICON_PROP_NAMES, [\n'selectedIconName',\n'selectedIconColor']);\n\n\nvar arePropsEqual = function arePropsEqual(keys) {return function (prevProps, nextProps) {return (\n      (0, _isEqual.default)((0, _pick.default)(prevProps, keys), (0, _pick.default)(nextProps, keys)));};};\n\nvar areIconPropsEqual = arePropsEqual(ICON_PROP_NAMES);\nvar areSelectedIconPropsEqual = arePropsEqual(SELECTED_ICON_PROP_NAMES);\n\nfunction createTabBarItemIOSComponent(\nIconNamePropType,\ngetImageSource)\n{var _class, _temp;\n  return _temp = _class = function (_PureComponent) {(0, _inherits2.default)(TabBarItemIOS, _PureComponent);var _super = _createSuper(TabBarItemIOS);function TabBarItemIOS() {var _this;(0, _classCallCheck2.default)(this, TabBarItemIOS);for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}_this = _super.call.apply(_super, [this].concat(args));_this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      state = {\n        icon: undefined,\n        selectedIcon: undefined };return _this;}(0, _createClass2.default)(TabBarItemIOS, [{ key: \"componentDidMount\", value: function componentDidMount()\n\n\n      {\n        this.updateIconSource();\n        this.updateSelectedIconSource();\n      } }, { key: \"componentDidUpdate\", value: function componentDidUpdate(\n\n      prevProps) {\n        if (!areIconPropsEqual(prevProps, this.props)) {\n          this.updateIconSource();\n        }\n        if (!areSelectedIconPropsEqual(prevProps, this.props)) {\n          this.updateSelectedIconSource();\n        }\n      } }, { key: \"updateIconSource\", value: function updateIconSource() {var _this$props, iconName, iconSize, iconColor, icon;return _regenerator.default.async(function updateIconSource$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:_this$props =\n\n\n                this.props, iconName = _this$props.iconName, iconSize = _this$props.iconSize, iconColor = _this$props.iconColor;if (!\n                iconName) {_context.next = 8;break;}_context.next = 4;return _regenerator.default.awrap(\n                getImageSource(iconName, iconSize, iconColor));case 4:icon = _context.sent;\n                this.setState({ icon: icon });_context.next = 9;break;case 8:\n\n                if (this.state.icon) {\n                  this.setState({ icon: undefined });\n                }case 9:case \"end\":return _context.stop();}}}, null, this, null, Promise);} }, { key: \"updateSelectedIconSource\", value: function updateSelectedIconSource() {var _this$props2, iconName, iconColor, iconSize, selectedIconName, selectedIconColor, selectedIcon;return _regenerator.default.async(function updateSelectedIconSource$(_context2) {while (1) {switch (_context2.prev = _context2.next) {case 0:_this$props2 =\n\n\n\n\n\n\n\n\n\n                this.props, iconName = _this$props2.iconName, iconColor = _this$props2.iconColor, iconSize = _this$props2.iconSize, selectedIconName = _this$props2.selectedIconName, selectedIconColor = _this$props2.selectedIconColor;if (!(\n                selectedIconName || selectedIconColor)) {_context2.next = 8;break;}_context2.next = 4;return _regenerator.default.awrap(\n                getImageSource(\n                selectedIconName || iconName,\n                iconSize,\n                selectedIconColor || iconColor));case 4:selectedIcon = _context2.sent;\n\n                this.setState({ selectedIcon: selectedIcon });_context2.next = 9;break;case 8:\n\n                if (this.state.selectedIcon) {\n                  this.setState({ selectedIcon: undefined });\n                }case 9:case \"end\":return _context2.stop();}}}, null, this, null, Promise);} }, { key: \"render\", value: function render()\n\n\n      {\n        return _react.default.createElement(_reactNative.TabBarIOS.Item, (0, _extends2.default)({}, this.state, this.props, { __source: { fileName: _jsxFileName, lineNumber: 93, columnNumber: 14 } }));\n      } }]);return TabBarItemIOS;}(_react.PureComponent), _class.propTypes = { iconName: IconNamePropType.isRequired, selectedIconName: IconNamePropType, iconSize: _propTypes.default.number, iconColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]), selectedIconColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]) }, _class.defaultProps = { iconSize: 30 }, _temp;\n\n}","map":{"version":3,"sources":["/Users/makenzis/Desktop/renative-template-chat-refactor/renative-template-chat/node_modules/react-native-vector-icons/lib/tab-bar-item-ios.js"],"names":["ICON_PROP_NAMES","SELECTED_ICON_PROP_NAMES","arePropsEqual","areIconPropsEqual","areSelectedIconPropsEqual","PureComponent","iconName","IconNamePropType","selectedIconName","iconSize","PropTypes","iconColor","selectedIconColor","icon","selectedIcon","getImageSource"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { TabBarIOS } from './react-native';\n\nconst ICON_PROP_NAMES = ['iconName', 'iconSize', 'iconColor'];\nconst SELECTED_ICON_PROP_NAMES = [\n  ...ICON_PROP_NAMES,\n  'selectedIconName',\n  'selectedIconColor',\n];\n\nconst arePropsEqual = keys => (prevProps, nextProps) =>\n  isEqual(pick(prevProps, keys), pick(nextProps, keys));\n\nconst areIconPropsEqual = arePropsEqual(ICON_PROP_NAMES);\nconst areSelectedIconPropsEqual = arePropsEqual(SELECTED_ICON_PROP_NAMES);\n\nexport default function createTabBarItemIOSComponent(\n  IconNamePropType,\n  getImageSource\n) {\n  return class TabBarItemIOS extends PureComponent {\n    static propTypes = {\n      iconName: IconNamePropType.isRequired,\n      selectedIconName: IconNamePropType,\n      iconSize: PropTypes.number,\n      iconColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      selectedIconColor: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]),\n    };\n\n    static defaultProps = {\n      iconSize: 30,\n    };\n\n    state = {\n      icon: undefined,\n      selectedIcon: undefined,\n    };\n\n    componentDidMount() {\n      this.updateIconSource();\n      this.updateSelectedIconSource();\n    }\n\n    componentDidUpdate(prevProps) {\n      if (!areIconPropsEqual(prevProps, this.props)) {\n        this.updateIconSource();\n      }\n      if (!areSelectedIconPropsEqual(prevProps, this.props)) {\n        this.updateSelectedIconSource();\n      }\n    }\n\n    async updateIconSource() {\n      const { iconName, iconSize, iconColor } = this.props;\n      if (iconName) {\n        const icon = await getImageSource(iconName, iconSize, iconColor);\n        this.setState({ icon });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.icon) {\n        this.setState({ icon: undefined });\n      }\n    }\n\n    async updateSelectedIconSource() {\n      const {\n        iconName,\n        iconColor,\n        iconSize,\n        selectedIconName,\n        selectedIconColor,\n      } = this.props;\n      if (selectedIconName || selectedIconColor) {\n        const selectedIcon = await getImageSource(\n          selectedIconName || iconName,\n          iconSize,\n          selectedIconColor || iconColor\n        );\n        this.setState({ selectedIcon });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.selectedIcon) {\n        this.setState({ selectedIcon: undefined });\n      }\n    }\n\n    render() {\n      return <TabBarIOS.Item {...this.state} {...this.props} />;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"script"}