{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = createIconButtonComponent;var _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _isString = _interopRequireDefault(require(\"lodash/isString\"));\nvar _omit = _interopRequireDefault(require(\"lodash/omit\"));\nvar _pick = _interopRequireDefault(require(\"lodash/pick\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _reactNative = require(\"./react-native\");var _jsxFileName = \"/Users/makenzis/Desktop/renative-template-chat-refactor/renative-template-chat/node_modules/react-native-vector-icons/lib/icon-button.js\";function _createSuper(Derived) {var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (hasNativeReflectConstruct) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === \"function\") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 8 },\n\n  touchable: {\n    overflow: 'hidden' },\n\n  icon: {\n    marginRight: 10 },\n\n  text: {\n    fontWeight: '600',\n    backgroundColor: 'transparent' } });\n\n\n\nvar IOS7_BLUE = '#007AFF';\n\nvar TEXT_PROP_NAMES = [\n'ellipsizeMode',\n'numberOfLines',\n'textBreakStrategy',\n'selectable',\n'suppressHighlighting',\n'allowFontScaling',\n'adjustsFontSizeToFit',\n'minimumFontScale'];\n\n\nvar TOUCHABLE_PROP_NAMES = [\n'accessible',\n'accessibilityLabel',\n'accessibilityHint',\n'accessibilityComponentType',\n'accessibilityRole',\n'accessibilityStates',\n'accessibilityTraits',\n'onFocus',\n'onBlur',\n'disabled',\n'onPress',\n'onPressIn',\n'onPressOut',\n'onLayout',\n'onLongPress',\n'nativeID',\n'testID',\n'delayPressIn',\n'delayPressOut',\n'delayLongPress',\n'activeOpacity',\n'underlayColor',\n'selectionColor',\n'onShowUnderlay',\n'onHideUnderlay',\n'hasTVPreferredFocus',\n'tvParallaxProperties'];\n\n\nfunction createIconButtonComponent(Icon) {var _class, _temp;\n  return _temp = _class = function (_PureComponent) {(0, _inherits2.default)(IconButton, _PureComponent);var _super = _createSuper(IconButton);function IconButton() {(0, _classCallCheck2.default)(this, IconButton);return _super.apply(this, arguments);}(0, _createClass2.default)(IconButton, [{ key: \"render\", value: function render()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      {var _this$props =\n        this.props,style = _this$props.style,iconStyle = _this$props.iconStyle,children = _this$props.children,restProps = (0, _objectWithoutProperties2.default)(_this$props, [\"style\", \"iconStyle\", \"children\"]);\n\n        var iconProps = (0, _pick.default)(\n        restProps,\n        TEXT_PROP_NAMES,\n        'style',\n        'name',\n        'size',\n        'color');\n\n        var touchableProps = (0, _pick.default)(restProps, TOUCHABLE_PROP_NAMES);\n        var props = (0, _omit.default)(\n        restProps,\n        Object.keys(iconProps),\n        Object.keys(touchableProps),\n        'iconStyle',\n        'borderRadius',\n        'backgroundColor');\n\n        iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;\n\n        var colorStyle = (0, _pick.default)(this.props, 'color');\n        var blockStyle = (0, _pick.default)(this.props, 'backgroundColor', 'borderRadius');\n\n        return (\n          _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({\n            style: [styles.touchable, blockStyle] },\n          touchableProps, { __source: { fileName: _jsxFileName, lineNumber: 118, columnNumber: 9 } }),\n\n          _react.default.createElement(_reactNative.View, (0, _extends2.default)({ style: [styles.container, blockStyle, style] }, props, { __source: { fileName: _jsxFileName, lineNumber: 122, columnNumber: 11 } }),\n          _react.default.createElement(Icon, (0, _extends2.default)({}, iconProps, { __source: { fileName: _jsxFileName, lineNumber: 123, columnNumber: 13 } })),\n          (0, _isString.default)(children) ?\n          _react.default.createElement(_reactNative.Text, { style: [styles.text, colorStyle], __source: { fileName: _jsxFileName, lineNumber: 125, columnNumber: 15 } }, children) :\n\n          children)));\n\n\n\n\n      } }]);return IconButton;}(_react.PureComponent), _class.propTypes = { backgroundColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]), borderRadius: _propTypes.default.number, color: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]), size: _propTypes.default.number, iconStyle: _propTypes.default.any, style: _propTypes.default.any, children: _propTypes.default.node }, _class.defaultProps = { backgroundColor: IOS7_BLUE, borderRadius: 5, color: 'white', size: 20 }, _temp;\n\n}","map":{"version":3,"sources":["/Users/makenzis/Desktop/renative-template-chat-refactor/renative-template-chat/node_modules/react-native-vector-icons/lib/icon-button.js"],"names":["styles","StyleSheet","container","flexDirection","justifyContent","alignItems","padding","touchable","overflow","icon","marginRight","text","fontWeight","backgroundColor","IOS7_BLUE","TEXT_PROP_NAMES","TOUCHABLE_PROP_NAMES","PureComponent","PropTypes","borderRadius","color","size","iconStyle","style","children","restProps","iconProps","touchableProps","props","Object","colorStyle","blockStyle"],"mappings":"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","sourcesContent":["import isString from 'lodash/isString';\nimport omit from 'lodash/omit';\nimport pick from 'lodash/pick';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, TouchableHighlight, View } from './react-native';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 8,\n  },\n  touchable: {\n    overflow: 'hidden',\n  },\n  icon: {\n    marginRight: 10,\n  },\n  text: {\n    fontWeight: '600',\n    backgroundColor: 'transparent',\n  },\n});\n\nconst IOS7_BLUE = '#007AFF';\n\nconst TEXT_PROP_NAMES = [\n  'ellipsizeMode',\n  'numberOfLines',\n  'textBreakStrategy',\n  'selectable',\n  'suppressHighlighting',\n  'allowFontScaling',\n  'adjustsFontSizeToFit',\n  'minimumFontScale',\n];\n\nconst TOUCHABLE_PROP_NAMES = [\n  'accessible',\n  'accessibilityLabel',\n  'accessibilityHint',\n  'accessibilityComponentType',\n  'accessibilityRole',\n  'accessibilityStates',\n  'accessibilityTraits',\n  'onFocus',\n  'onBlur',\n  'disabled',\n  'onPress',\n  'onPressIn',\n  'onPressOut',\n  'onLayout',\n  'onLongPress',\n  'nativeID',\n  'testID',\n  'delayPressIn',\n  'delayPressOut',\n  'delayLongPress',\n  'activeOpacity',\n  'underlayColor',\n  'selectionColor',\n  'onShowUnderlay',\n  'onHideUnderlay',\n  'hasTVPreferredFocus',\n  'tvParallaxProperties',\n];\n\nexport default function createIconButtonComponent(Icon) {\n  return class IconButton extends PureComponent {\n    static propTypes = {\n      backgroundColor: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]),\n      borderRadius: PropTypes.number,\n      color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      size: PropTypes.number,\n      iconStyle: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      style: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      children: PropTypes.node,\n    };\n\n    static defaultProps = {\n      backgroundColor: IOS7_BLUE,\n      borderRadius: 5,\n      color: 'white',\n      size: 20,\n    };\n\n    render() {\n      const { style, iconStyle, children, ...restProps } = this.props;\n\n      const iconProps = pick(\n        restProps,\n        TEXT_PROP_NAMES,\n        'style',\n        'name',\n        'size',\n        'color'\n      );\n      const touchableProps = pick(restProps, TOUCHABLE_PROP_NAMES);\n      const props = omit(\n        restProps,\n        Object.keys(iconProps),\n        Object.keys(touchableProps),\n        'iconStyle',\n        'borderRadius',\n        'backgroundColor'\n      );\n      iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;\n\n      const colorStyle = pick(this.props, 'color');\n      const blockStyle = pick(this.props, 'backgroundColor', 'borderRadius');\n\n      return (\n        <TouchableHighlight\n          style={[styles.touchable, blockStyle]}\n          {...touchableProps}\n        >\n          <View style={[styles.container, blockStyle, style]} {...props}>\n            <Icon {...iconProps} />\n            {isString(children) ? (\n              <Text style={[styles.text, colorStyle]}>{children}</Text>\n            ) : (\n              children\n            )}\n          </View>\n        </TouchableHighlight>\n      );\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"script"}