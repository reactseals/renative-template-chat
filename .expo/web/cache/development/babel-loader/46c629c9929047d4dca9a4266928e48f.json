{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _ExecutionEnvironment = require(\"fbjs/lib/ExecutionEnvironment\");\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nfunction _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\n\n\n\n\n\n\n\n\n\nvar initialURL = _ExecutionEnvironment.canUseDOM ? window.location.href : '';\nvar Linking = {\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  canOpenURL: function canOpenURL() {\n    return Promise.resolve(true);\n  },\n  getInitialURL: function getInitialURL() {\n    return Promise.resolve(initialURL);\n  },\n  openURL: function openURL(url) {\n    try {\n      open(url);\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  _validateURL: function _validateURL(url) {\n    (0, _invariant.default)(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    (0, _invariant.default)(url, 'Invalid URL: cannot be empty');\n  } };\n\n\nvar open = function open(url) {\n  if (_ExecutionEnvironment.canUseDOM) {\n    window.location = new URL(url, window.location).toString();\n  }\n};\n\nvar _default = Linking;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/makenzis/Desktop/renative-template-chat-refactor/renative-template-chat/node_modules/react-native-web/dist/cjs/exports/Linking/index.js"],"names":["exports","__esModule","default","_ExecutionEnvironment","require","_invariant","_interopRequireDefault","obj","initialURL","canUseDOM","window","location","href","Linking","addEventListener","removeEventListener","canOpenURL","Promise","resolve","getInitialURL","openURL","url","open","e","reject","_validateURL","URL","toString","_default","module"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,qBAAqB,GAAGC,OAAO,CAAC,+BAAD,CAAnC;;AAEA,IAAIC,UAAU,GAAGC,sBAAsB,CAACF,OAAO,CAAC,oBAAD,CAAR,CAAvC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC,CAAE,OAAOA,GAAG,IAAIA,GAAG,CAACN,UAAX,GAAwBM,GAAxB,GAA8B,EAAEL,OAAO,EAAEK,GAAX,EAArC,CAAwD;;;;;;;;;;;AAW/F,IAAIC,UAAU,GAAGL,qBAAqB,CAACM,SAAtB,GAAkCC,MAAM,CAACC,QAAP,CAAgBC,IAAlD,GAAyD,EAA1E;AACA,IAAIC,OAAO,GAAG;AACZC,EAAAA,gBAAgB,EAAE,SAASA,gBAAT,GAA4B,CAAE,CADpC;AAEZC,EAAAA,mBAAmB,EAAE,SAASA,mBAAT,GAA+B,CAAE,CAF1C;AAGZC,EAAAA,UAAU,EAAE,SAASA,UAAT,GAAsB;AAChC,WAAOC,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACD,GALW;AAMZC,EAAAA,aAAa,EAAE,SAASA,aAAT,GAAyB;AACtC,WAAOF,OAAO,CAACC,OAAR,CAAgBV,UAAhB,CAAP;AACD,GARW;AASZY,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAC7B,QAAI;AACFC,MAAAA,IAAI,CAACD,GAAD,CAAJ;AACA,aAAOJ,OAAO,CAACC,OAAR,EAAP;AACD,KAHD,CAGE,OAAOK,CAAP,EAAU;AACV,aAAON,OAAO,CAACO,MAAR,CAAeD,CAAf,CAAP;AACD;AACF,GAhBW;AAiBZE,EAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBJ,GAAtB,EAA2B;AACvC,KAAC,GAAGhB,UAAU,CAACH,OAAf,EAAwB,OAAOmB,GAAP,KAAe,QAAvC,EAAiD,2CAA2CA,GAA5F;AACA,KAAC,GAAGhB,UAAU,CAACH,OAAf,EAAwBmB,GAAxB,EAA6B,8BAA7B;AACD,GApBW,EAAd;;;AAuBA,IAAIC,IAAI,GAAG,SAASA,IAAT,CAAcD,GAAd,EAAmB;AAC5B,MAAIlB,qBAAqB,CAACM,SAA1B,EAAqC;AACnCC,IAAAA,MAAM,CAACC,QAAP,GAAkB,IAAIe,GAAJ,CAAQL,GAAR,EAAaX,MAAM,CAACC,QAApB,EAA8BgB,QAA9B,EAAlB;AACD;AACF,CAJD;;AAMA,IAAIC,QAAQ,GAAGf,OAAf;AACAb,OAAO,CAACE,OAAR,GAAkB0B,QAAlB;AACAC,MAAM,CAAC7B,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _ExecutionEnvironment = require(\"fbjs/lib/ExecutionEnvironment\");\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar initialURL = _ExecutionEnvironment.canUseDOM ? window.location.href : '';\nvar Linking = {\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  canOpenURL: function canOpenURL() {\n    return Promise.resolve(true);\n  },\n  getInitialURL: function getInitialURL() {\n    return Promise.resolve(initialURL);\n  },\n  openURL: function openURL(url) {\n    try {\n      open(url);\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  _validateURL: function _validateURL(url) {\n    (0, _invariant.default)(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    (0, _invariant.default)(url, 'Invalid URL: cannot be empty');\n  }\n};\n\nvar open = function open(url) {\n  if (_ExecutionEnvironment.canUseDOM) {\n    window.location = new URL(url, window.location).toString();\n  }\n};\n\nvar _default = Linking;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}