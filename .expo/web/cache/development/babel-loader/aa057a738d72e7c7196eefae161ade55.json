{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = Button;\n\n\n\n\n\n\n\n\nvar _StyleSheet = _interopRequireDefault(require(\"../StyleSheet\"));\nvar _TouchableOpacity = _interopRequireDefault(require(\"../TouchableOpacity\"));\nvar _Text = _interopRequireDefault(require(\"../Text\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nfunction Button(props) {\n  var accessibilityLabel = props.accessibilityLabel,\n  color = props.color,\n  disabled = props.disabled,\n  onPress = props.onPress,\n  testID = props.testID,\n  title = props.title;\n  return _react.default.createElement(_TouchableOpacity.default, {\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    disabled: disabled,\n    onPress: onPress,\n    style: [styles.button, color && {\n      backgroundColor: color },\n    disabled && styles.buttonDisabled],\n    testID: testID },\n  _react.default.createElement(_Text.default, {\n    style: [styles.text, disabled && styles.textDisabled] },\n  title));\n}\nvar styles = _StyleSheet.default.create({\n  button: {\n    backgroundColor: '#2196F3',\n    borderRadius: 2 },\n\n  text: {\n    color: '#fff',\n    fontWeight: '500',\n    padding: 8,\n    textAlign: 'center',\n    textTransform: 'uppercase' },\n\n  buttonDisabled: {\n    backgroundColor: '#dfdfdf' },\n\n  textDisabled: {\n    color: '#a1a1a1' } });","map":{"version":3,"sources":["/Users/makenzis/Desktop/renative-template-chat-refactor/renative-template-chat/node_modules/react-native-web/dist/exports/Button/index.js"],"names":["Button","props","accessibilityLabel","color","disabled","onPress","testID","title","React","createElement","TouchableOpacity","accessibilityRole","style","styles","button","backgroundColor","buttonDisabled","Text","text","textDisabled","StyleSheet","create","borderRadius","fontWeight","padding","textAlign","textTransform"],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;AACe,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;AACpC,MAAIC,kBAAkB,GAAGD,KAAK,CAACC,kBAA/B;AACIC,EAAAA,KAAK,GAAGF,KAAK,CAACE,KADlB;AAEIC,EAAAA,QAAQ,GAAGH,KAAK,CAACG,QAFrB;AAGIC,EAAAA,OAAO,GAAGJ,KAAK,CAACI,OAHpB;AAIIC,EAAAA,MAAM,GAAGL,KAAK,CAACK,MAJnB;AAKIC,EAAAA,KAAK,GAAGN,KAAK,CAACM,KALlB;AAMA,SAAOC,eAAMC,aAAN,CAAoBC,yBAApB,EAAsC;AAC3CR,IAAAA,kBAAkB,EAAEA,kBADuB;AAE3CS,IAAAA,iBAAiB,EAAE,QAFwB;AAG3CP,IAAAA,QAAQ,EAAEA,QAHiC;AAI3CC,IAAAA,OAAO,EAAEA,OAJkC;AAK3CO,IAAAA,KAAK,EAAE,CAACC,MAAM,CAACC,MAAR,EAAgBX,KAAK,IAAI;AAC9BY,MAAAA,eAAe,EAAEZ,KADa,EAAzB;AAEJC,IAAAA,QAAQ,IAAIS,MAAM,CAACG,cAFf,CALoC;AAQ3CV,IAAAA,MAAM,EAAEA,MARmC,EAAtC;AASJE,iBAAMC,aAAN,CAAoBQ,aAApB,EAA0B;AAC3BL,IAAAA,KAAK,EAAE,CAACC,MAAM,CAACK,IAAR,EAAcd,QAAQ,IAAIS,MAAM,CAACM,YAAjC,CADoB,EAA1B;AAEAZ,EAAAA,KAFA,CATI,CAAP;AAYD;AACD,IAAIM,MAAM,GAAGO,oBAAWC,MAAX,CAAkB;AAC7BP,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAE,SADX;AAENO,IAAAA,YAAY,EAAE,CAFR,EADqB;;AAK7BJ,EAAAA,IAAI,EAAE;AACJf,IAAAA,KAAK,EAAE,MADH;AAEJoB,IAAAA,UAAU,EAAE,KAFR;AAGJC,IAAAA,OAAO,EAAE,CAHL;AAIJC,IAAAA,SAAS,EAAE,QAJP;AAKJC,IAAAA,aAAa,EAAE,WALX,EALuB;;AAY7BV,EAAAA,cAAc,EAAE;AACdD,IAAAA,eAAe,EAAE,SADH,EAZa;;AAe7BI,EAAAA,YAAY,EAAE;AACZhB,IAAAA,KAAK,EAAE,SADK,EAfe,EAAlB,CAAb","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport StyleSheet from '../StyleSheet';\nimport TouchableOpacity from '../TouchableOpacity';\nimport Text from '../Text';\nimport React from 'react';\nexport default function Button(props) {\n  var accessibilityLabel = props.accessibilityLabel,\n      color = props.color,\n      disabled = props.disabled,\n      onPress = props.onPress,\n      testID = props.testID,\n      title = props.title;\n  return React.createElement(TouchableOpacity, {\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    disabled: disabled,\n    onPress: onPress,\n    style: [styles.button, color && {\n      backgroundColor: color\n    }, disabled && styles.buttonDisabled],\n    testID: testID\n  }, React.createElement(Text, {\n    style: [styles.text, disabled && styles.textDisabled]\n  }, title));\n}\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#2196F3',\n    borderRadius: 2\n  },\n  text: {\n    color: '#fff',\n    fontWeight: '500',\n    padding: 8,\n    textAlign: 'center',\n    textTransform: 'uppercase'\n  },\n  buttonDisabled: {\n    backgroundColor: '#dfdfdf'\n  },\n  textDisabled: {\n    color: '#a1a1a1'\n  }\n});"]},"metadata":{},"sourceType":"script"}